{"ast":null,"code":"import _classCallCheck from \"/Users/powers_rc/MyProjects/dQA/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/powers_rc/MyProjects/dQA/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/powers_rc/MyProjects/dQA/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/Users/powers_rc/MyProjects/dQA/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/powers_rc/MyProjects/dQA/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/Users/powers_rc/MyProjects/dQA/client/src/js/WorkHistory.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { GoldenWestJob } from './jobs/GoldenWestJob';\nexport var WorkHistory = /*#__PURE__*/function (_Component) {\n  _inherits(WorkHistory, _Component);\n\n  var _super = _createSuper(WorkHistory);\n\n  function WorkHistory(props) {\n    var _this;\n\n    _classCallCheck(this, WorkHistory);\n\n    _this = _super.call(this, props);\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(WorkHistory, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // Create the observer\n      var observer = new IntersectionObserver(function (entries) {\n        // Loop over the entries\n        entries.forEach(function (entry) {\n          // If the element is visible\n          if (entry.isIntersecting && entry.target.classList.contains('work-line-animation')) {\n            //Update url to work history section\n            var pageState = document.getElementById(\"work-section\").innerHTML,\n                title = \"Work Page\",\n                urlPath = window.location.href;\n            var newUrlPath = urlPath.split(\"#\")[0] + \"#work-section\";\n            window.history.pushState({\n              \"html\": pageState\n            }, title, newUrlPath);\n            entry.target.classList.add('line-animation-left');\n          } else if (entry.isIntersecting && entry.target.classList.contains('work-text-animation')) entry.target.classList.add('typewriter-left');\n        });\n      });\n      observer.observe(document.querySelector('.work-line-animation'));\n      observer.observe(document.querySelector('.work-text-animation'));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        id: \"work-section\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"animation-responsive-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"work-line-animation animation-responsive-line\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"animation-responsive-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        className: \"work-text-animation\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 19\n        }\n      }, \"Work History\"))), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"work-history\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"work-radio-selection\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"work-buttons\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"radio\",\n        id: \"gwis\",\n        name: \"jobs\",\n        value: \"GWIS\",\n        onClick: function onClick(val) {\n          return _this2.setState({\n            selectedJob: val\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        for: \"goldenwesttechnologies\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }\n      }, \"Golden West Technologies\"), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 89\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"work-buttons\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"radio\",\n        id: \"cdot\",\n        name: \"jobs\",\n        value: \"CDOT\",\n        onClick: function onClick(val) {\n          return _this2.setState({\n            selectedJob: val\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        for: \"xentity\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }\n      }, \"Xentity\"), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 57\n        }\n      }))), /*#__PURE__*/React.createElement(GoldenWestJob, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }\n      }));\n    }\n  }]);\n\n  return WorkHistory;\n}(Component);","map":{"version":3,"sources":["/Users/powers_rc/MyProjects/dQA/client/src/js/WorkHistory.js"],"names":["React","Component","GoldenWestJob","WorkHistory","props","state","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","target","classList","contains","pageState","document","getElementById","innerHTML","title","urlPath","window","location","href","newUrlPath","split","history","pushState","add","observe","querySelector","val","setState","selectedJob"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { GoldenWestJob } from './jobs/GoldenWestJob';\n\nexport class WorkHistory extends Component {\n    constructor(props){\n      super(props);\n      this.state = {};\n    }\n\n    componentDidMount(){\n      // Create the observer\n      const observer = new IntersectionObserver(entries => {\n        // Loop over the entries\n        entries.forEach(entry => {\n          // If the element is visible\n          if (entry.isIntersecting && entry.target.classList.contains('work-line-animation')) {\n            //Update url to work history section\n            let pageState = document.getElementById(\"work-section\").innerHTML,\n              title = \"Work Page\",\n              urlPath = window.location.href;\n\n            let newUrlPath = urlPath.split(\"#\")[0] + \"#work-section\";\n            window.history.pushState({\"html\":pageState}, title, newUrlPath);\n            entry.target.classList.add('line-animation-left');\n          } else if(entry.isIntersecting && entry.target.classList.contains('work-text-animation'))\n            entry.target.classList.add('typewriter-left');\n        });\n      });\n\n      observer.observe(document.querySelector('.work-line-animation'));\n      observer.observe(document.querySelector('.work-text-animation'));\n    }\n\n  render() {\n    return (\n        <div id=\"work-section\">\n            <div className=\"animation-responsive-container\">\n                <div className=\"work-line-animation animation-responsive-line\"></div>\n                <div className=\"animation-responsive-text\">\n                  <h2 className=\"work-text-animation\">Work History</h2>\n                </div>\n            </div>\n            <div>\n              <div className=\"work-history\">\n                <div className='work-radio-selection'>\n                  <div className=\"work-buttons\">\n                    <button></button>\n                    <input type=\"radio\" id=\"gwis\" name=\"jobs\" value=\"GWIS\" onClick={(val) => this.setState({selectedJob: val})}/>\n                    <label for=\"goldenwesttechnologies\">Golden West Technologies</label><br/>\n                  </div>\n                  <div className=\"work-buttons\">\n                    <input type=\"radio\" id=\"cdot\" name=\"jobs\" value=\"CDOT\" onClick={(val) => this.setState({selectedJob: val})}/>\n                    <label for=\"xentity\">Xentity</label><br/>\n                  </div>\n                </div>\n                <GoldenWestJob/>\n              </div>\n            </div>\n          <div>\n\n          </div>\n        </div>\n    );\n  }\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}