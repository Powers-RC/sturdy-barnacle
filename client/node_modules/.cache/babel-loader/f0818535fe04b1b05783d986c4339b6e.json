{"ast":null,"code":"import _classCallCheck from \"/Users/powers_rc/MyProjects/dQA/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/powers_rc/MyProjects/dQA/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/powers_rc/MyProjects/dQA/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/Users/powers_rc/MyProjects/dQA/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/powers_rc/MyProjects/dQA/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/Users/powers_rc/MyProjects/dQA/client/src/js/Projects.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport { CarouselProvider, Slider, Slide, ButtonBack, ButtonNext } from 'pure-react-carousel';\nimport 'pure-react-carousel/dist/react-carousel.es.css';\nexport var Projects = /*#__PURE__*/function (_React$Component) {\n  _inherits(Projects, _React$Component);\n\n  var _super = _createSuper(Projects);\n\n  function Projects() {\n    _classCallCheck(this, Projects);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Projects, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // Create the observer\n      var observer = new IntersectionObserver(function (entries) {\n        // Loop over the entries\n        entries.forEach(function (entry) {\n          var projectLine = entry.target.querySelector('project-line-animation');\n          var projectText = entry.target.querySelector('project-text-animation'); // If the element is visible\n\n          if (entry.isIntersecting && entry.target.classList.contains('project-line-animation')) {\n            entry.target.classList.add('line-animation-right');\n          } else if (entry.isIntersecting && entry.target.classList.contains('project-text-animation')) {\n            entry.target.classList.add('typewriter-right-projects');\n          }\n\n          projectLine.classList.remove('line-animation-right');\n          projectText.classList.remove('typewriter-right-projects');\n        });\n        observer.observe(document.querySelector('.project-line-animation'));\n        observer.observe(document.querySelector('.project-text-animation'));\n      });\n\n      if (projectLine) {}\n\n      if (projectText) {}\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        id: \"projects-section\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"animation-separator\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"hr\", {\n        className: \"project-line-animation\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"h2\", {\n        className: \"project-text-animation\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }\n      }, \"Projects\")), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(CarouselProvider, {\n        naturalSlideWidth: 100,\n        naturalSlideHeight: 125,\n        totalSlides: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Slider, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Slide, {\n        index: 0,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }\n      }, \"I am the first Slide.\"), /*#__PURE__*/React.createElement(Slide, {\n        index: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 15\n        }\n      }, \"I am the second Slide.\"), /*#__PURE__*/React.createElement(Slide, {\n        index: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }\n      }, \"I am the third Slide.\")))));\n    }\n  }]);\n\n  return Projects;\n}(React.Component);","map":{"version":3,"sources":["/Users/powers_rc/MyProjects/dQA/client/src/js/Projects.js"],"names":["React","CarouselProvider","Slider","Slide","ButtonBack","ButtonNext","Projects","observer","IntersectionObserver","entries","forEach","entry","projectLine","target","querySelector","projectText","isIntersecting","classList","contains","add","remove","observe","document","Component"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,EAA2BC,MAA3B,EAAmCC,KAAnC,EAA0CC,UAA1C,EAAsDC,UAAtD,QAAwE,qBAAxE;AACA,OAAO,gDAAP;AAEA,WAAaC,QAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,WACI,6BAAmB;AACjB;AACA,UAAMC,QAAQ,GAAG,IAAIC,oBAAJ,CAAyB,UAAAC,OAAO,EAAI;AACnD;AACAA,QAAAA,OAAO,CAACC,OAAR,CAAgB,UAAAC,KAAK,EAAI;AACvB,cAAIC,WAAW,GAAGD,KAAK,CAACE,MAAN,CAAaC,aAAb,CAA2B,wBAA3B,CAAlB;AACA,cAAIC,WAAW,GAAGJ,KAAK,CAACE,MAAN,CAAaC,aAAb,CAA2B,wBAA3B,CAAlB,CAFuB,CAGvB;;AACA,cAAIH,KAAK,CAACK,cAAN,IAAwBL,KAAK,CAACE,MAAN,CAAaI,SAAb,CAAuBC,QAAvB,CAAgC,wBAAhC,CAA5B,EAAuF;AACrFP,YAAAA,KAAK,CAACE,MAAN,CAAaI,SAAb,CAAuBE,GAAvB,CAA2B,sBAA3B;AACD,WAFD,MAEO,IAAGR,KAAK,CAACK,cAAN,IAAwBL,KAAK,CAACE,MAAN,CAAaI,SAAb,CAAuBC,QAAvB,CAAgC,wBAAhC,CAA3B,EAAsF;AAC3FP,YAAAA,KAAK,CAACE,MAAN,CAAaI,SAAb,CAAuBE,GAAvB,CAA2B,2BAA3B;AACD;;AACDP,UAAAA,WAAW,CAACK,SAAZ,CAAsBG,MAAtB,CAA6B,sBAA7B;AACAL,UAAAA,WAAW,CAACE,SAAZ,CAAsBG,MAAtB,CAA6B,2BAA7B;AACD,SAXD;AAYAb,QAAAA,QAAQ,CAACc,OAAT,CAAiBC,QAAQ,CAACR,aAAT,CAAuB,yBAAvB,CAAjB;AACAP,QAAAA,QAAQ,CAACc,OAAT,CAAiBC,QAAQ,CAACR,aAAT,CAAuB,yBAAvB,CAAjB;AACD,OAhBgB,CAAjB;;AAiBA,UAAGF,WAAH,EAAe,CACd;;AACD,UAAGG,WAAH,EAAe,CACd;AACF;AAxBL;AAAA;AAAA,WA0BE,kBAAQ;AACN,0BACE;AAAK,QAAA,EAAE,EAAC,kBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAI,QAAA,SAAS,EAAC,wBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,eAEE;AAAI,QAAA,SAAS,EAAC,wBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,CADF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,gBAAD;AACE,QAAA,iBAAiB,EAAE,GADrB;AAEE,QAAA,kBAAkB,EAAE,GAFtB;AAGE,QAAA,WAAW,EAAE,CAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAKE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAE,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADF,eAEE,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAE,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAFF,eAGE,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAE,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAHF,CALF,CADF,CALF,CADF;AAqBD;AAhDH;;AAAA;AAAA,EAA8Bf,KAAK,CAACuB,SAApC","sourcesContent":["import React from 'react';\nimport { CarouselProvider, Slider, Slide, ButtonBack, ButtonNext } from 'pure-react-carousel';\nimport 'pure-react-carousel/dist/react-carousel.es.css';\n\nexport class Projects extends React.Component{\n    componentDidMount(){\n      // Create the observer\n      const observer = new IntersectionObserver(entries => {\n        // Loop over the entries\n        entries.forEach(entry => {\n          let projectLine = entry.target.querySelector('project-line-animation');\n          let projectText = entry.target.querySelector('project-text-animation');\n          // If the element is visible\n          if (entry.isIntersecting && entry.target.classList.contains('project-line-animation')) {\n            entry.target.classList.add('line-animation-right');\n          } else if(entry.isIntersecting && entry.target.classList.contains('project-text-animation')) {\n            entry.target.classList.add('typewriter-right-projects');\n          }\n          projectLine.classList.remove('line-animation-right');\n          projectText.classList.remove('typewriter-right-projects');\n        });\n        observer.observe(document.querySelector('.project-line-animation'));\n        observer.observe(document.querySelector('.project-text-animation'));\n      });\n      if(projectLine){\n      }\n      if(projectText){\n      }\n    }\n\n  render(){\n    return(\n      <div id=\"projects-section\">\n        <div className=\"animation-separator\">\n            <hr className=\"project-line-animation\"/>\n          <h2 className=\"project-text-animation\">Projects</h2>\n        </div>\n        <div>\n          <CarouselProvider\n            naturalSlideWidth={100}\n            naturalSlideHeight={125}\n            totalSlides={3}\n          >\n            <Slider>\n              <Slide index={0}>I am the first Slide.</Slide>\n              <Slide index={1}>I am the second Slide.</Slide>\n              <Slide index={2}>I am the third Slide.</Slide>\n            </Slider>\n            </CarouselProvider> \n        </div>\n      </div>\n    )\n  }\n\n}\n"]},"metadata":{},"sourceType":"module"}