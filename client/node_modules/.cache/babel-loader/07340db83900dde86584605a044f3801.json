{"ast":null,"code":"import _classCallCheck from \"/Users/powers_rc/MyProjects/dQA/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/powers_rc/MyProjects/dQA/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/powers_rc/MyProjects/dQA/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/Users/powers_rc/MyProjects/dQA/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/powers_rc/MyProjects/dQA/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/Users/powers_rc/MyProjects/dQA/client/src/js/WorkHistory.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nexport var WorkHistory = /*#__PURE__*/function (_Component) {\n  _inherits(WorkHistory, _Component);\n\n  var _super = _createSuper(WorkHistory);\n\n  function WorkHistory() {\n    _classCallCheck(this, WorkHistory);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(WorkHistory, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // Create the observer\n      var observer = new IntersectionObserver(function (entries) {\n        // Loop over the entries\n        entries.forEach(function (entry) {\n          // If the element is visible\n          if (entry.isIntersecting && entry.target.classList.contains('work-line-animation')) {\n            //Update url to intro section\n            var pageState = document.getElementById(\"intro-section\").innerHTML,\n                title = \"Introduction Page\",\n                urlPath = window.location.href;\n            var newUrlPath = urlPath.split(\"#\")[0] + \"#intro-section\";\n            window.history.pushState({\n              \"html\": pageState\n            }, title, newUrlPath);\n            entry.target.classList.add('line-animation-left');\n          } else if (entry.isIntersecting && entry.target.classList.contains('work-text-animation')) entry.target.classList.add('typewriter-left');\n        });\n      });\n      observer.observe(document.querySelector('.work-line-animation'));\n      observer.observe(document.querySelector('.work-text-animation'));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        id: \"work-section\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"animation-responsive-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"work-line-animation animation-responsive-line\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"animation-responsive-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        className: \"work-text-animation\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 19\n        }\n      }, \"Work History\"))), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }\n      }));\n    }\n  }]);\n\n  return WorkHistory;\n}(Component);","map":{"version":3,"sources":["/Users/powers_rc/MyProjects/dQA/client/src/js/WorkHistory.js"],"names":["React","Component","WorkHistory","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","target","classList","contains","pageState","document","getElementById","innerHTML","title","urlPath","window","location","href","newUrlPath","split","history","pushState","add","observe","querySelector"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,WAAaC,WAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,WACI,6BAAmB;AACjB;AACA,UAAMC,QAAQ,GAAG,IAAIC,oBAAJ,CAAyB,UAAAC,OAAO,EAAI;AACnD;AACAA,QAAAA,OAAO,CAACC,OAAR,CAAgB,UAAAC,KAAK,EAAI;AACvB;AACA,cAAIA,KAAK,CAACC,cAAN,IAAwBD,KAAK,CAACE,MAAN,CAAaC,SAAb,CAAuBC,QAAvB,CAAgC,qBAAhC,CAA5B,EAAoF;AAClF;AACA,gBAAIC,SAAS,GAAGC,QAAQ,CAACC,cAAT,CAAwB,eAAxB,EAAyCC,SAAzD;AAAA,gBACEC,KAAK,GAAG,mBADV;AAAA,gBAEEC,OAAO,GAAGC,MAAM,CAACC,QAAP,CAAgBC,IAF5B;AAIA,gBAAIC,UAAU,GAAGJ,OAAO,CAACK,KAAR,CAAc,GAAd,EAAmB,CAAnB,IAAwB,gBAAzC;AACAJ,YAAAA,MAAM,CAACK,OAAP,CAAeC,SAAf,CAAyB;AAAC,sBAAOZ;AAAR,aAAzB,EAA6CI,KAA7C,EAAoDK,UAApD;AACAd,YAAAA,KAAK,CAACE,MAAN,CAAaC,SAAb,CAAuBe,GAAvB,CAA2B,qBAA3B;AACD,WATD,MASO,IAAGlB,KAAK,CAACC,cAAN,IAAwBD,KAAK,CAACE,MAAN,CAAaC,SAAb,CAAuBC,QAAvB,CAAgC,qBAAhC,CAA3B,EACLJ,KAAK,CAACE,MAAN,CAAaC,SAAb,CAAuBe,GAAvB,CAA2B,iBAA3B;AACH,SAbD;AAcD,OAhBgB,CAAjB;AAkBAtB,MAAAA,QAAQ,CAACuB,OAAT,CAAiBb,QAAQ,CAACc,aAAT,CAAuB,sBAAvB,CAAjB;AACAxB,MAAAA,QAAQ,CAACuB,OAAT,CAAiBb,QAAQ,CAACc,aAAT,CAAuB,sBAAvB,CAAjB;AACD;AAvBL;AAAA;AAAA,WAyBE,kBAAS;AACP,0BACI;AAAK,QAAA,EAAE,EAAC,cAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAK,QAAA,SAAS,EAAC,gCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAK,QAAA,SAAS,EAAC,+CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,eAEI;AAAK,QAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAI,QAAA,SAAS,EAAC,qBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,CAFJ,CADJ,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPF,CADJ;AAaD;AAvCH;;AAAA;AAAA,EAAiC1B,SAAjC","sourcesContent":["import React, { Component } from 'react';\n\nexport class WorkHistory extends Component {\n    componentDidMount(){\n      // Create the observer\n      const observer = new IntersectionObserver(entries => {\n        // Loop over the entries\n        entries.forEach(entry => {\n          // If the element is visible\n          if (entry.isIntersecting && entry.target.classList.contains('work-line-animation')) {\n            //Update url to intro section\n            let pageState = document.getElementById(\"intro-section\").innerHTML,\n              title = \"Introduction Page\",\n              urlPath = window.location.href;\n\n            let newUrlPath = urlPath.split(\"#\")[0] + \"#intro-section\";\n            window.history.pushState({\"html\":pageState}, title, newUrlPath);\n            entry.target.classList.add('line-animation-left');\n          } else if(entry.isIntersecting && entry.target.classList.contains('work-text-animation'))\n            entry.target.classList.add('typewriter-left');\n        });\n      });\n\n      observer.observe(document.querySelector('.work-line-animation'));\n      observer.observe(document.querySelector('.work-text-animation'));\n    }\n\n  render() {\n    return (\n        <div id=\"work-section\">\n            <div className=\"animation-responsive-container\">\n                <div className=\"work-line-animation animation-responsive-line\"></div>\n                <div className=\"animation-responsive-text\">\n                  <h2 className=\"work-text-animation\">Work History</h2>\n                </div>\n            </div>\n          <div>\n\n          </div>\n        </div>\n    );\n  }\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}